name: Release Artifacts

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'

      - name: Extract version from gradle.properties
        id: get_version
        run: |
          version=$(grep '^version=' gradle.properties | cut -d'=' -f2)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if tag exists
        id: tag_check
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
          echo "Tag v${{ env.VERSION }} already exists. Failing the build."
          exit 1
          else
          echo "Tag v${{ env.VERSION }} does not exist. Continuing."
          fi

      - name: Run script to generate artifacts
        run: ./ci/zip.sh

      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: build/distributions/*.zip

      - name: Tag the merge commit
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: "Release ${{ env.VERSION }}"
          draft: false
          prerelease: false


      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/*.zip
          asset_content_type: application/zip