name: Release Artifacts
run-name: Release Artifacts for commit '${{ github.sha }}' by ${{ github.actor }}

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write
      actions: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        id: checkout_code
        uses: actions/checkout@v3

      - name: Setup JDK
        id: setup_jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'

      - name: Extract version from gradle.properties
        id: get_version
        run: |
          version=$(grep '^version=' gradle.properties | cut -d'=' -f2)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if tag exists
        id: tag_check
        run: |
          TAG=$(git tag -l "v${VERSION}")
          echo "Captured Tag: `$TAG`"
          if [ -n "$TAG" ]; then
            echo "Tag v${{ env.VERSION }} already exists. Failing the build."
            exit 1
          else
            echo "Tag v${{ env.VERSION }} does not exist. Continuing."
          fi

      - name: Generate Artifacts
        id: generate_artifacts
        run: ./ci/zip.sh

      - name: Tag the Commit
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: "Release ${{ env.VERSION }}"
          draft: false
          prerelease: false

      - name: Upload Stratify Assets
        id: upload_release_assetS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/stratify_artifacts_${{ env.VERSION }}.zip
          asset_name: stratify_artifacts_${{ env.VERSION }}.zip
          asset_content_type: application/zip
